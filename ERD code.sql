-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.books
(
    isbn character varying(20) COLLATE pg_catalog."default" NOT NULL,
    book_title character varying(80) COLLATE pg_catalog."default",
    category character varying(20) COLLATE pg_catalog."default",
    rental_price double precision,
    status character varying(10) COLLATE pg_catalog."default",
    author character varying(40) COLLATE pg_catalog."default",
    publisher character varying(55) COLLATE pg_catalog."default",
    CONSTRAINT books_pkey PRIMARY KEY (isbn)
);

CREATE TABLE IF NOT EXISTS public.branch
(
    branch_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    manager_id character varying(10) COLLATE pg_catalog."default",
    branch_address character varying(50) COLLATE pg_catalog."default",
    contact_no character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT branch_pkey PRIMARY KEY (branch_id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    emp_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    emp_name character varying(20) COLLATE pg_catalog."default",
    "position" character varying(25) COLLATE pg_catalog."default",
    salary integer,
    branch_id character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT employees_pkey PRIMARY KEY (emp_id)
);

CREATE TABLE IF NOT EXISTS public.issued_status
(
    issued_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    issued_member_id character varying(10) COLLATE pg_catalog."default",
    issued_book_name character varying(80) COLLATE pg_catalog."default",
    issued_date date,
    issued_book_isbn character varying(30) COLLATE pg_catalog."default",
    issued_emp_id character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT issued_status_pkey PRIMARY KEY (issued_id)
);

CREATE TABLE IF NOT EXISTS public.members
(
    member_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    member_name character varying(25) COLLATE pg_catalog."default",
    member_address character varying(35) COLLATE pg_catalog."default",
    reg_date date,
    CONSTRAINT members_pkey PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS public.return_status
(
    return_id character varying(10) COLLATE pg_catalog."default" NOT NULL,
    issued_id character varying(10) COLLATE pg_catalog."default",
    return_book_name character varying(80) COLLATE pg_catalog."default",
    return_date date,
    return_book_isbn character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT return_status_pkey PRIMARY KEY (return_id)
);

ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT fk_employees_branch FOREIGN KEY (branch_id)
    REFERENCES public.branch (branch_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.issued_status
    ADD CONSTRAINT fk_books FOREIGN KEY (issued_book_isbn)
    REFERENCES public.books (isbn) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.issued_status
    ADD CONSTRAINT fk_issued_status_books FOREIGN KEY (issued_book_isbn)
    REFERENCES public.books (isbn) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.issued_status
    ADD CONSTRAINT fk_issued_status_employees FOREIGN KEY (issued_emp_id)
    REFERENCES public.employees (emp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.issued_status
    ADD CONSTRAINT fk_issued_status_members FOREIGN KEY (issued_member_id)
    REFERENCES public.members (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.issued_status
    ADD CONSTRAINT fk_members FOREIGN KEY (issued_member_id)
    REFERENCES public.members (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.return_status
    ADD CONSTRAINT fk_return_status_issued_status FOREIGN KEY (issued_id)
    REFERENCES public.issued_status (issued_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;